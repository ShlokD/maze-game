{"version":3,"sources":["js/classes/score.js","js/classes/piece.js","js/classes/board.js","js/classes/boardui.js","js/app.js"],"names":["score","available","x","y","piece","layout","seen","positionMap","coord","toString","incrementScore","getScore","getAvailable","getXY","i","length","row","j","val","Math","round","random","push","Piece","Score","setSeen","space","e","boundX","boundY","isSpace","direction","isMovable","move","setScore","coords","ui","pieceEl","document","querySelector","scoreEl","availableEl","buttons","querySelectorAll","board","Board","currentPosition","posX","posY","handleKeyPress","bind","handleButtonClick","textContent","getAvailableScore","xTransform","yTransform","style","transform","action","movePiece","setPiece","setScoreText","ev","preventDefault","keyCode","setUI","target","dataset","initLayout","setAvailableText","addEventListener","forEach","button","window","navigator","serviceWorker","register","BoardUI","start"],"mappings":"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","file":"app.83eb4e0d.js","sourceRoot":"..","sourcesContent":["export default class {\r\n  constructor(score, available) {\r\n    this.score = score;\r\n    this.available = available;\r\n  }\r\n\r\n  setScore(score) {\r\n    this.score = score;\r\n  }\r\n\r\n  setAvailable(available) {\r\n    this.available = available;\r\n  }\r\n\r\n  getScore() {\r\n    return this.score;\r\n  }\r\n\r\n  getAvailable() {\r\n    return this.available;\r\n  }\r\n\r\n  incrementScore() {\r\n    this.score++;\r\n  }\r\n} ","export default class {\r\n  constructor(x = 0, y  = 0) {\r\n    this.x = x\r\n    this.y = y\r\n  }\r\n\r\n  getXY() {\r\n    return { x: this.x, y: this.y }\r\n  }\r\n\r\n  move(x, y) {\r\n    this.x += x;\r\n    this.y += y;\r\n  }\r\n\r\n  toString() {\r\n    return `(${this.x},${this.y})`;\r\n  }\r\n}\r\n","import Score from './score.js';\r\nimport Piece from './piece.js';\r\n\r\n\r\nexport default class {\r\n  constructor() {\r\n    this.piece = null;\r\n    this.score = null;\r\n\r\n    this.layout = [[], [], [], [], [], [], []];\r\n    this.seen = {};\r\n\r\n    this.positionMap = {\r\n      'left': { x: -1, y: 0 },\r\n      'up': { x: 0, y: -1 },\r\n      'right': { x: 1, y: 0 },\r\n      'down': { x: 0, y: 1 }\r\n    }\r\n  }\r\n\r\n  setSeen() {\r\n    const coord = this.piece.toString();\r\n    this.seen[coord] = true;\r\n  }\r\n\r\n  setScore() {\r\n    const coord = this.piece.toString();\r\n    if (!this.seen[coord]) {\r\n      this.score.incrementScore();\r\n    }\r\n  }\r\n\r\n  getScore() {\r\n    return this.score.getScore()\r\n  }\r\n\r\n  getAvailableScore() {\r\n    return this.score.getAvailable();\r\n  }\r\n\r\n  getPiecePosition() {\r\n    return this.piece.getXY();\r\n  }\r\n\r\n  getLayout() {\r\n    return this.layout;\r\n  }\r\n\r\n\r\n  initLayout() {\r\n    let available = 0;\r\n\r\n    for(let i = 0; i < this.layout.length; ++i) {\r\n      const row = this.layout[i];\r\n      for (let j = 0; j < this.layout.length; ++j) {\r\n        const val = Math.round(Math.random());\r\n        row.push(val)\r\n        if (val === 1) available++;\r\n      }\r\n    }\r\n\r\n\r\n    if(this.layout[3][3] === 1) {\r\n      available--;\r\n    } else {\r\n      this.layout[3][3] = 1;\r\n    }\r\n\r\n    this.piece = new Piece(3, 3);\r\n    this.score = new Score(0, available);\r\n    this.setSeen();\r\n  }\r\n\r\n  isSpace(x, y) {\r\n    let space = false\r\n    try {\r\n      space = !!this.layout[y][x]\r\n    } catch(e) {}\r\n    return space;\r\n  }\r\n\r\n  isMovable(x, y) {\r\n    const { x: pieceX, y: pieceY } = this.piece.getXY();\r\n    const boundX = pieceX + x;\r\n    const boundY = pieceY + y;\r\n\r\n    return boundX >= 0 && boundX < this.layout.length && boundY >= 0 && boundY < this.layout[0].length && this.isSpace(boundX, boundY);\r\n  }\r\n\r\n  movePiece(direction) {\r\n    const coord = this.positionMap[direction];\r\n    if (coord) {\r\n      const { x, y } = coord;\r\n      if(this.isMovable(x, y)) {\r\n        this.piece.move(x, y);\r\n        this.setScore();\r\n        this.setSeen();\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n}","import Board from './board.js';\r\n\r\nconst coords = {\r\n  37: {\r\n    direction: 'left',\r\n    ui: { x: -30, y: 0 }\r\n  },\r\n  38: {\r\n    direction: 'up',\r\n    ui: { x: 0, y: -30 }\r\n  },\r\n  39: {\r\n    direction: 'right',\r\n    ui: { x: 30, y: 0 }\r\n  },\r\n  40: {\r\n    direction: 'down',\r\n    ui: { x: 0, y: 30 }\r\n  }\r\n}\r\n\r\nexport default class {\r\n  constructor() {\r\n    this.pieceEl = document.querySelector(\"#piece\");\r\n    this.scoreEl = document.querySelector(\"#score\");\r\n    this.availableEl = document.querySelector(\"#available\");\r\n    this.buttons = document.querySelectorAll('.controls button');\r\n    this.board = new Board();\r\n    this.currentPosition = { posX: 0, posY: 0 };\r\n\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n\r\n  }\r\n\r\n  setScoreText() {\r\n    this.scoreEl.textContent = this.board.getScore();\r\n  }\r\n\r\n  setAvailableText() {\r\n    this.availableEl.textContent = this.board.getAvailableScore();\r\n  }\r\n\r\n  setPiece(ui) {\r\n    const { x: xTransform, y: yTransform } = ui;\r\n\r\n    this.currentPosition.posX += xTransform;\r\n    this.currentPosition.posY += yTransform;\r\n    this.pieceEl.style.transform = `translate(${this.currentPosition.posX}px, ${this.currentPosition.posY}px)`;\r\n  }\r\n\r\n  setUI(action) {\r\n    if(!coords[action]) return false;\r\n    const { direction, ui } = coords[action];\r\n\r\n    const shouldMovePiece = this.board.movePiece(direction);\r\n    if(shouldMovePiece) {\r\n      this.setPiece(ui);\r\n      this.setScoreText();\r\n    }\r\n  }\r\n\r\n  handleKeyPress(ev) {\r\n    ev.preventDefault();\r\n    const {keyCode} = ev;\r\n    this.setUI(keyCode);\r\n  }\r\n\r\n  handleButtonClick(ev) {\r\n    const { direction } = ev.target.dataset;\r\n    this.setUI(direction);\r\n  }\r\n\r\n  start() {\r\n    this.board.initLayout();\r\n    this.setScoreText();\r\n    this.setAvailableText();\r\n    document.addEventListener('keydown', this.handleKeyPress);\r\n    this.buttons.forEach((button) => {\r\n      button.addEventListener('click', this.handleButtonClick);\r\n    })\r\n  }\r\n}","\r\n\r\n\r\nimport BoardUI from './classes/boardui.js';\r\n\r\n\r\nwindow.addEventListener('load', () => {\r\n  if('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register(`./sw.js`)\r\n  }\r\n  \r\n  const boardUI = new BoardUI();\r\n  boardUI.start();\r\n})\r\n\r\n"]}